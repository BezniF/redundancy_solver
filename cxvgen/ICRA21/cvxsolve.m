% Produced by CVXGEN, 2020-10-21 12:02:58 -0400.
% CVXGEN is Copyright (C) 2006-2017 Jacob Mattingley, jem@cvxgen.com.
% The code in this file is Copyright (C) 2006-2017 Jacob Mattingley.
% CVXGEN, or solvers produced by CVXGEN, cannot be used for commercial
% applications without prior written permission from Jacob Mattingley.

% Filename: cvxsolve.m.
% Description: Solution file, via cvx, for use with sample.m.
function [vars, status] = cvxsolve(params, settings)
A = params.A;
B = params.B;
J = params.J;
M = params.M;
Q_lim = params.Q_lim;
Sigma = params.Sigma;
a_max = params.a_max;
dotq_adm = params.dotq_adm;
dotq_max = params.dotq_max;
dotq_min = params.dotq_min;
dotq_prev = params.dotq_prev;
h_goal = params.h_goal;
h_lim = params.h_lim;
h_safe = params.h_safe;
l = params.l;
sigma = params.sigma;
sigma_0 = params.sigma_0;
sigma_obs = params.sigma_obs;
cvx_begin
  % Caution: automatically generated by cvxgen. May be incorrect.
  variable dotq(6, 1);
  variable delta(2, 1);

  minimize(quad_form(dotq - dotq_adm, M) + l*quad_form(delta, eye(2)));
  subject to
    -(sigma' - sigma_0')*J*dotq >=  - h_goal - (sigma' - sigma_0')*Sigma - delta(1);
    Q_lim*dotq >= h_lim;
    2*(sigma' - sigma_obs')*J*dotq >= h_safe - delta(2);
    A'*J*dotq <= B;
    dotq_min <= dotq;
    dotq <= dotq_max;
    -a_max <= dotq - dotq_prev;
    dotq - dotq_prev <= a_max;
cvx_end
vars.delta = delta;
vars.dotq = dotq;
status.cvx_status = cvx_status;
% Provide a drop-in replacement for csolve.
status.optval = cvx_optval;
status.converged = strcmp(cvx_status, 'Solved');
